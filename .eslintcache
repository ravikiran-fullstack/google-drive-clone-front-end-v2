[{"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\index.js":"1","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\App.js":"2","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\home\\Home.js":"3","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\preferences\\Preferences.js":"4","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\SignIn.js":"5","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\hooks\\useToken.js":"6","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\styles.js":"7","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\SignUp.js":"8","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\styles.js":"9","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js":"10","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js":"11","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js":"12","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\styles.js":"13","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\Upload.js":"14","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\styles.js":"15","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\index.js":"16","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\App.js":"17","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\hooks\\useToken.js":"18","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\preferences\\Preferences.js":"19","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\Upload.js":"20","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\SignUp.js":"21","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\SignIn.js":"22","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js":"23","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js":"24","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\styles.js":"25","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\styles.js":"26","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js":"27","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\styles.js":"28","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\styles.js":"29","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\MenuAppBar.js":"30","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\styles.js":"31","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\styles.js":"32","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\appStyles.js":"33","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\File.js":"34","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\styles.js":"35","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\Home.js":"36"},{"size":168,"mtime":1612199875883,"results":"37","hashOfConfig":"38"},{"size":2043,"mtime":1612245127209,"results":"39","hashOfConfig":"38"},{"size":138,"mtime":1612183819630,"results":"40","hashOfConfig":"38"},{"size":163,"mtime":1612183836500,"results":"41","hashOfConfig":"38"},{"size":4304,"mtime":1612244083595,"results":"42","hashOfConfig":"38"},{"size":707,"mtime":1612201478904,"results":"43","hashOfConfig":"38"},{"size":483,"mtime":1612191288375,"results":"44","hashOfConfig":"38"},{"size":5117,"mtime":1612195902873,"results":"45","hashOfConfig":"38"},{"size":483,"mtime":1612195338068,"results":"46","hashOfConfig":"38"},{"size":4044,"mtime":1612245770926,"results":"47","hashOfConfig":"38"},{"size":628,"mtime":1612241461588,"results":"48","hashOfConfig":"38"},{"size":3673,"mtime":1612242453997,"results":"49","hashOfConfig":"38"},{"size":628,"mtime":1612241717075,"results":"50","hashOfConfig":"38"},{"size":2078,"mtime":1612247531810,"results":"51","hashOfConfig":"38"},{"size":628,"mtime":1612245792652,"results":"52","hashOfConfig":"38"},{"size":174,"mtime":1612269518431,"results":"53","hashOfConfig":"54"},{"size":2642,"mtime":1612881255167,"results":"55","hashOfConfig":"54"},{"size":710,"mtime":1612791107575,"results":"56","hashOfConfig":"54"},{"size":163,"mtime":1612269518430,"results":"57","hashOfConfig":"54"},{"size":3530,"mtime":1612880779337,"results":"58","hashOfConfig":"54"},{"size":5117,"mtime":1612503956754,"results":"59","hashOfConfig":"54"},{"size":5916,"mtime":1612505244090,"results":"60","hashOfConfig":"54"},{"size":5614,"mtime":1612880768582,"results":"61","hashOfConfig":"54"},{"size":4123,"mtime":1612503925088,"results":"62","hashOfConfig":"54"},{"size":881,"mtime":1612850153745,"results":"63","hashOfConfig":"54"},{"size":483,"mtime":1612269518428,"results":"64","hashOfConfig":"54"},{"size":628,"mtime":1612269518426,"results":"65","hashOfConfig":"54"},{"size":971,"mtime":1612505008002,"results":"66","hashOfConfig":"54"},{"size":628,"mtime":1612269518426,"results":"67","hashOfConfig":"54"},{"size":3723,"mtime":1612881355957,"results":"68","hashOfConfig":"54"},{"size":1699,"mtime":1612369957142,"results":"69","hashOfConfig":"54"},{"size":199,"mtime":1612847871814,"results":"70","hashOfConfig":"54"},{"size":174,"mtime":1612860515060,"results":"71","hashOfConfig":"54"},{"size":4854,"mtime":1612891869669,"results":"72","hashOfConfig":"54"},{"size":607,"mtime":1612887010102,"results":"73","hashOfConfig":"54"},{"size":3234,"mtime":1612887391556,"results":"74","hashOfConfig":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"212pm4",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"zhp791",{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"109"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"109"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"109"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"109"},"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\index.js",[],["157","158"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\App.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\home\\Home.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\preferences\\Preferences.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\SignIn.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\hooks\\useToken.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\styles.js",[],["159","160"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\SignUp.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\Upload.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\index.js",[],["161","162"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\App.js",["163"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport SignIn from \"./components/auth/signin/SignIn\";\r\nimport SignUp from \"./components/auth/signup/SignUp\";\r\nimport ConfirmEmailForgotPassword from \"./components/auth/confirmEmailForgotPassword/ComfirmEmailForgotPassword\";\r\nimport ResetPassword from \"./components/auth/resetPassword/ResetPassword\";\r\n\r\nimport Home from \"./components/home/Home\";\r\nimport Upload from \"./components/upload/Upload\";\r\nimport MenuAppBar from \"./components/menuappbar/MenuAppBar\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\n\r\n//hooks\r\nimport useToken from \"./hooks/useToken\";\r\nimport useStyles from \"./appStyles\";\r\n\r\nconst App = () => {\r\n  const [isDark, setIsDark] = useState(false);  \r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n    },\r\n  });\r\n  \r\n  const lightTheme = createMuiTheme({\r\n    palette: {\r\n      type: \"light\",\r\n      primary: {\r\n        main: red[400]\r\n      },\r\n      secondary: {\r\n        main: green[400]\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleThemeChange = () => { \r\n    setIsDark(!isDark);\r\n  }\r\n\r\n  const currentUrl = window.location.pathname;\r\n  const { token, setToken } = useToken();\r\n\r\n  const classes = useStyles();\r\n\r\n  if (currentUrl.includes(\"/signup\")) {\r\n    localStorage.removeItem('token');\r\n    return <SignUp />;\r\n  }\r\n\r\n  if (currentUrl.includes(\"/confirmemail\")) {\r\n    localStorage.removeItem('token');\r\n    return <ConfirmEmailForgotPassword />;\r\n  }\r\n\r\n  if (currentUrl.includes(\"/reset\")) {\r\n    localStorage.removeItem('token');\r\n    return <ResetPassword />;\r\n  }\r\n\r\n  if (!token && !currentUrl.includes(\"/signup\")) {\r\n    return <SignIn setToken={setToken} />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={ isDark? darkTheme: lightTheme }>\r\n      <div>\r\n        <BrowserRouter>\r\n          <MenuAppBar handleThemeChange={ handleThemeChange} isDark={isDark} />\r\n          <Container component=\"main\" className={classes.container}>\r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                    <Home></Home>\r\n                  </Route>\r\n                  <Route path=\"/home\">\r\n                    <Home></Home>\r\n                  </Route>\r\n                  <Route path=\"/upload\">\r\n                    <Upload></Upload>\r\n                  </Route>\r\n                </Switch>\r\n          </Container>\r\n        </BrowserRouter>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\hooks\\useToken.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\preferences\\Preferences.js",[],["164","165"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\Upload.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\SignUp.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\SignIn.js",["166"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport clsx from \"clsx\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Google Drive Clone\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst SignIn = ({ setToken }) => {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const timer = useRef();\r\n  const passwordFieldRef = useRef();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.submit]: true,\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  const signInUser = async (credentials) => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_BACK_END_URL}/login`;\r\n      //const url = 'http://localhost:8585/login';\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n      const status = response.status;\r\n      const data = await response.json();\r\n      if (status > 399) {\r\n        throw new Error(data.message);\r\n      }\r\n      setSuccess(true);\r\n      setLoading(false);\r\n      return data;\r\n    } catch (err) {\r\n      handleError(err);\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    passwordFieldRef.current.value = \"\";\r\n    passwordFieldRef.current.focus();\r\n    setError(true);\r\n    setSuccess(true);\r\n    setLoading(false);\r\n    setErrorMessage(err.message);\r\n    console.log(\"login error\", err);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(false);\r\n    setSuccess(false);\r\n    setLoading(true);\r\n    const data = await signInUser({\r\n      username,\r\n      password,\r\n    });\r\n    // console.log(\"token\", data);\r\n    setToken(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n            noValidate={false}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"username\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={passwordFieldRef}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={buttonClassname}\r\n              disabled={loading}\r\n            >\r\n              Sign In\r\n              {loading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  className={classes.buttonProgress}\r\n                />\r\n              )}\r\n            </Button>\r\n            {error && (\r\n              <Grid\r\n                container\r\n                justify=\"center\"\r\n                className={  classes.failureContainer }\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">{errorMessage}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/confirmemail\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SignIn;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js",["167","168","169"],"import React, { useState } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst resetPassword = async (credentials) => {\r\n  try {\r\n    const url = `${process.env.REACT_APP_BACK_END_URL}/resetPassword`;    \r\n    //const url = 'http://localhost:8585/login';\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    const status = response.status;\r\n    // console.log(\"res, status\", response, status);\r\n    const data = await response.json();\r\n    // console.log(\"data\", data);\r\n    return data;\r\n  } catch (err) {\r\n    console.log(\"login error\", err);\r\n  }\r\n};\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [showError, setShowError] = useState(false);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [messageContent, setMessageContent] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async (e) => {\r\n    const username = window.location.href.match(/username=([^&]*)/)[1];\r\n    e.preventDefault();\r\n    const data = await resetPassword({\r\n      username,\r\n      password\r\n    });\r\n    handleResponse(data);\r\n  };\r\n\r\n  const handleResponse = (data) => {\r\n    if (data.message === \"Password reset successfully\") {\r\n      setShowError(false);\r\n      setSuccess(true);\r\n      setMessageContent(\r\n        \"Password has been successfully reset, you will be redirected to login page\"\r\n      );\r\n      setTimeout(() => {\r\n        localStorage.removeItem('token');\r\n        window.location.assign('/home');\r\n      }, 2000);\r\n    } else {\r\n      setSuccess(false);\r\n      setShowError(true);\r\n      setMessageContent(\"An error ocurred, please try again later!\");\r\n    }    \r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Reset Password\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n            noValidate={false}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => {\r\n                if (confirmPassword && confirmPassword !== e.target.value) {\r\n                  setShowError(true);\r\n                } else { \r\n                  setShowError(false);\r\n                  setPassword(e.target.value);\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => {\r\n                if (password && e.target.value !== password) {\r\n                  setShowError(true);\r\n                } else { \r\n                  setConfirmPassword(e.target.value);\r\n                  setShowError(false);\r\n                }\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={showError || !confirmPassword || !password}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            {showError && (\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Typography\r\n                    className={classes.messageFailure}\r\n                    variant=\"subtitle1\"\r\n                  >\r\n                    { messageContent || 'Passwords do no match'}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {success && (\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Typography\r\n                    className={classes.messageSuccess}\r\n                    variant=\"subtitle1\"\r\n                  >\r\n                    { messageContent }\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/confirmEmail\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js",["170"],"import React, { useState } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst sendEmailToServer = async (credentials) => {\r\n  try {\r\n    console.log(\"signin user called\");\r\n    const url = `${process.env.REACT_APP_BACK_END_URL}/confirmEmailResetPassword`;\r\n    //\"https://google-drive-clone-rk.herokuapp.com/confirmEmailResetPassword\";\r\n    //const url = 'http://localhost:8585/login';\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    const status = response.status;\r\n    // console.log(\"res, status\", response, status);\r\n    const data = await response.json();\r\n    // console.log(\"data\", data);\r\n    return data;\r\n  } catch (err) {\r\n    console.log(\"login error\", err);\r\n  }\r\n};\r\n\r\nconst ConfirmEmailForgotPassword = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState();\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [messageContent, setMessageContent] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = await sendEmailToServer({\r\n      username: email,\r\n    });\r\n    // console.log(\"token\", data);\r\n    handleResponse(data);\r\n  };\r\n\r\n  const handleResponse = (data) => {\r\n    // console.log('data', data);\r\n    setShowMessage(true);\r\n    if (data.message === \"Sent Successfully\") {\r\n      setSuccess(true);\r\n      setMessageContent(\r\n        \"Email Sent Successfully, please click on the reset link\"\r\n      );\r\n    } else if (data.message === \"User doesn't  exists\") {\r\n      setSuccess(false);\r\n      setMessageContent(\"User check the email or Signup with as a new user\");\r\n    } else if (data.message === \"Enter valid email ID\") {\r\n      setSuccess(false);\r\n      setMessageContent(\"User check the email or Signup with as a new user\");\r\n    } else {\r\n      setSuccess(false);\r\n      setMessageContent(\"An error ocurred, please try again later!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\r\n            Confirm Email\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n            noValidate={false}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"username\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Send\r\n            </Button>\r\n            {showMessage && (\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Typography className={success? classes.messageSuccess: classes.messageFailure} variant=\"body2\">{messageContent}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmEmailForgotPassword;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\MenuAppBar.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\appStyles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\File.js",["171"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\styles.js",[],["172","173"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\Home.js",["174","175","176","177","178"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"./styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport File from \"../file/File.js\";\r\n\r\nconst Home = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const token = JSON.parse(localStorage.getItem(\"token\"));\r\n  const username = JSON.parse(localStorage.getItem(\"username\"));\r\n  if (!token) {\r\n    localStorage.removeItem('token');\r\n    window.location.assign(\"/home\");\r\n  }\r\n  const authenticateUser = async () => {\r\n    console.log(\"authenticateUser---------------------\");\r\n    try {\r\n      await axios.post(\r\n        `${process.env.REACT_APP_BACK_END_URL}/authenticateSession`,\r\n        {\r\n          token,\r\n          username,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      localStorage.removeItem('token');\r\n      window.location.assign(\"/home\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\");\r\n    authenticateUser();\r\n  }, []);\r\n  \r\n  const prepareFilesForUI = (files) => { \r\n    const updatedFilesArray = files.map(file => { \r\n      if (file.fileType.indexOf(\"image\") !== -1) {\r\n        file.displayImage = './images/im1.png';\r\n      } else if (file.fileType.indexOf(\"video\") !== -1) {\r\n        file.displayImage = './images/mv1.png';\r\n      } else { \r\n        file.displayImage = './images/doc.png';\r\n      }\r\n      file.originalName = file.fileName.slice(6, file.fileName.length);\r\n      // console.log('file.slice(file.fileName.indexOf(\"_\") + 1, file.fileName.length - 1)', file.slice(file.fileName.indexOf(\"_\") + 1, file.fileName.length - 1));\r\n      // file.fileName = file.slice(file.fileName.indexOf(\"_\") + 1, file.fileName.length - 1);\r\n\r\n      return file;\r\n    })\r\n    setFiles(updatedFilesArray);\r\n  }\r\n\r\n  const fetchFilesInfo = async () => {\r\n    try {\r\n      const result = await axios.get(\r\n        `${process.env.REACT_APP_BACK_END_URL}/allfiles`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(result);\r\n      prepareFilesForUI(result.data.files);\r\n    } catch (err) {\r\n      console.log(err);\r\n      localStorage.removeItem('token');\r\n      window.location.assign(\"/home\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFilesInfo();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <h1>Home</h1>\r\n      <Grid container className={classes.root}>\r\n        {files.map((file) => {\r\n          return (\r\n            <Grid key={file.fileName} item>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  justifyContent: \"space-around\",\r\n                  marginRight: \"20px\"\r\n                }}\r\n              >\r\n                <File {...file} />\r\n              </div>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"179","replacedBy":"185"},{"ruleId":"181","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"179","replacedBy":"191"},{"ruleId":"181","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":54,"column":26,"nodeType":"189","endLine":54,"endColumn":33},{"ruleId":"187","severity":1,"message":"195","line":26,"column":11,"nodeType":"189","messageId":"190","endLine":26,"endColumn":17},{"ruleId":"187","severity":1,"message":"196","line":40,"column":10,"nodeType":"189","messageId":"190","endLine":40,"endColumn":21},{"ruleId":"187","severity":1,"message":"197","line":40,"column":23,"nodeType":"189","messageId":"190","endLine":40,"endColumn":37},{"ruleId":"187","severity":1,"message":"195","line":26,"column":11,"nodeType":"189","messageId":"190","endLine":26,"endColumn":17},{"ruleId":"187","severity":1,"message":"198","line":20,"column":19,"nodeType":"189","messageId":"190","endLine":20,"endColumn":29},{"ruleId":"179","replacedBy":"199"},{"ruleId":"181","replacedBy":"200"},{"ruleId":"187","severity":1,"message":"201","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"202","line":5,"column":23,"nodeType":"189","messageId":"190","endLine":5,"endColumn":31},{"ruleId":"187","severity":1,"message":"203","line":5,"column":33,"nodeType":"189","messageId":"190","endLine":5,"endColumn":51},{"ruleId":"193","severity":1,"message":"204","line":42,"column":6,"nodeType":"205","endLine":42,"endColumn":8,"suggestions":"206"},{"ruleId":"193","severity":1,"message":"207","line":84,"column":6,"nodeType":"205","endLine":84,"endColumn":8,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],["209"],["210"],["209"],["210"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["209"],["210"],"react-hooks/exhaustive-deps","The ref value 'timer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timer.current' to a variable inside the effect, and use that variable in the cleanup function.","'status' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'setShowMessage' is assigned a value but never used.","'setFileRef' is assigned a value but never used.",["209"],["210"],"'ContextMenu' is defined but never used.","'MenuItem' is defined but never used.","'ContextMenuTrigger' is defined but never used.","React Hook useEffect has a missing dependency: 'authenticateUser'. Either include it or remove the dependency array.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'fetchFilesInfo'. Either include it or remove the dependency array.",["212"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [authenticateUser]",{"range":"217","text":"218"},"Update the dependencies array to be: [fetchFilesInfo]",{"range":"219","text":"220"},[1226,1228],"[authenticateUser]",[2597,2599],"[fetchFilesInfo]"]
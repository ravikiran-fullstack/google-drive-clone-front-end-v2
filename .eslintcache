[{"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\index.js":"1","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\App.js":"2","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\home\\Home.js":"3","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\preferences\\Preferences.js":"4","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\SignIn.js":"5","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\hooks\\useToken.js":"6","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\styles.js":"7","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\SignUp.js":"8","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\styles.js":"9","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js":"10","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js":"11","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js":"12","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\styles.js":"13","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\Upload.js":"14","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\styles.js":"15","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\index.js":"16","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\App.js":"17","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\hooks\\useToken.js":"18","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\preferences\\Preferences.js":"19","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\Upload.js":"20","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\SignUp.js":"21","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\SignIn.js":"22","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js":"23","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js":"24","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\styles.js":"25","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\styles.js":"26","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js":"27","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\styles.js":"28","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\styles.js":"29","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\MenuAppBar.js":"30","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\styles.js":"31","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\styles.js":"32","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\appStyles.js":"33","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\File.js":"34","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\styles.js":"35","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\Home.js":"36"},{"size":168,"mtime":1612199875883,"results":"37","hashOfConfig":"38"},{"size":2043,"mtime":1612245127209,"results":"39","hashOfConfig":"38"},{"size":138,"mtime":1612183819630,"results":"40","hashOfConfig":"38"},{"size":163,"mtime":1612183836500,"results":"41","hashOfConfig":"38"},{"size":4304,"mtime":1612244083595,"results":"42","hashOfConfig":"38"},{"size":707,"mtime":1612201478904,"results":"43","hashOfConfig":"38"},{"size":483,"mtime":1612191288375,"results":"44","hashOfConfig":"38"},{"size":5117,"mtime":1612195902873,"results":"45","hashOfConfig":"38"},{"size":483,"mtime":1612195338068,"results":"46","hashOfConfig":"38"},{"size":4044,"mtime":1612245770926,"results":"47","hashOfConfig":"38"},{"size":628,"mtime":1612241461588,"results":"48","hashOfConfig":"38"},{"size":3673,"mtime":1612242453997,"results":"49","hashOfConfig":"38"},{"size":628,"mtime":1612241717075,"results":"50","hashOfConfig":"38"},{"size":2078,"mtime":1612247531810,"results":"51","hashOfConfig":"38"},{"size":628,"mtime":1612245792652,"results":"52","hashOfConfig":"38"},{"size":364,"mtime":1613150464387,"results":"53","hashOfConfig":"54"},{"size":2645,"mtime":1613737877789,"results":"55","hashOfConfig":"54"},{"size":710,"mtime":1612791107575,"results":"56","hashOfConfig":"54"},{"size":163,"mtime":1612269518430,"results":"57","hashOfConfig":"54"},{"size":5250,"mtime":1612932970216,"results":"58","hashOfConfig":"54"},{"size":5117,"mtime":1612503956754,"results":"59","hashOfConfig":"54"},{"size":5916,"mtime":1612505244090,"results":"60","hashOfConfig":"54"},{"size":5614,"mtime":1612927173331,"results":"61","hashOfConfig":"54"},{"size":4123,"mtime":1612503925088,"results":"62","hashOfConfig":"54"},{"size":1406,"mtime":1612932292859,"results":"63","hashOfConfig":"54"},{"size":483,"mtime":1612269518428,"results":"64","hashOfConfig":"54"},{"size":628,"mtime":1612269518426,"results":"65","hashOfConfig":"54"},{"size":971,"mtime":1612505008002,"results":"66","hashOfConfig":"54"},{"size":628,"mtime":1612269518426,"results":"67","hashOfConfig":"54"},{"size":2804,"mtime":1613738606677,"results":"68","hashOfConfig":"54"},{"size":1196,"mtime":1613737765582,"results":"69","hashOfConfig":"54"},{"size":199,"mtime":1612927173357,"results":"70","hashOfConfig":"54"},{"size":175,"mtime":1613738498733,"results":"71","hashOfConfig":"54"},{"size":5800,"mtime":1613154531757,"results":"72","hashOfConfig":"54"},{"size":826,"mtime":1613738369127,"results":"73","hashOfConfig":"54"},{"size":3234,"mtime":1612927173355,"results":"74","hashOfConfig":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"212pm4",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"zhp791",{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"109"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"109"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"109"},"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\index.js",[],["156","157"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\App.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\home\\Home.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\preferences\\Preferences.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\SignIn.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\hooks\\useToken.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signin\\styles.js",[],["158","159"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\SignUp.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\signup\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\auth\\resetPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\Upload.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone\\front-end\\src\\components\\upload\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\index.js",[],["160","161"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\App.js",["162","163","164"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\hooks\\useToken.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\preferences\\Preferences.js",[],["165","166"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\Upload.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\SignUp.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\SignIn.js",["167"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport clsx from \"clsx\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Google Drive Clone\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst SignIn = ({ setToken }) => {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const timer = useRef();\r\n  const passwordFieldRef = useRef();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.submit]: true,\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  const signInUser = async (credentials) => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_BACK_END_URL}/login`;\r\n      //const url = 'http://localhost:8585/login';\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n      const status = response.status;\r\n      const data = await response.json();\r\n      if (status > 399) {\r\n        throw new Error(data.message);\r\n      }\r\n      setSuccess(true);\r\n      setLoading(false);\r\n      return data;\r\n    } catch (err) {\r\n      handleError(err);\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    passwordFieldRef.current.value = \"\";\r\n    passwordFieldRef.current.focus();\r\n    setError(true);\r\n    setSuccess(true);\r\n    setLoading(false);\r\n    setErrorMessage(err.message);\r\n    console.log(\"login error\", err);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(false);\r\n    setSuccess(false);\r\n    setLoading(true);\r\n    const data = await signInUser({\r\n      username,\r\n      password,\r\n    });\r\n    // console.log(\"token\", data);\r\n    setToken(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n            noValidate={false}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"username\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={passwordFieldRef}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={buttonClassname}\r\n              disabled={loading}\r\n            >\r\n              Sign In\r\n              {loading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  className={classes.buttonProgress}\r\n                />\r\n              )}\r\n            </Button>\r\n            {error && (\r\n              <Grid\r\n                container\r\n                justify=\"center\"\r\n                className={  classes.failureContainer }\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">{errorMessage}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/confirmemail\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SignIn;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\ResetPassword.js",["168","169","170"],"import React, { useState } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst resetPassword = async (credentials) => {\r\n  try {\r\n    const url = `${process.env.REACT_APP_BACK_END_URL}/resetPassword`;    \r\n    //const url = 'http://localhost:8585/login';\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    const status = response.status;\r\n    // console.log(\"res, status\", response, status);\r\n    const data = await response.json();\r\n    // console.log(\"data\", data);\r\n    return data;\r\n  } catch (err) {\r\n    console.log(\"login error\", err);\r\n  }\r\n};\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [showError, setShowError] = useState(false);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [messageContent, setMessageContent] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async (e) => {\r\n    const username = window.location.href.match(/username=([^&]*)/)[1];\r\n    e.preventDefault();\r\n    const data = await resetPassword({\r\n      username,\r\n      password\r\n    });\r\n    handleResponse(data);\r\n  };\r\n\r\n  const handleResponse = (data) => {\r\n    if (data.message === \"Password reset successfully\") {\r\n      setShowError(false);\r\n      setSuccess(true);\r\n      setMessageContent(\r\n        \"Password has been successfully reset, you will be redirected to login page\"\r\n      );\r\n      setTimeout(() => {\r\n        localStorage.removeItem('token');\r\n        window.location.assign('/home');\r\n      }, 2000);\r\n    } else {\r\n      setSuccess(false);\r\n      setShowError(true);\r\n      setMessageContent(\"An error ocurred, please try again later!\");\r\n    }    \r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Reset Password\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n            noValidate={false}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => {\r\n                if (confirmPassword && confirmPassword !== e.target.value) {\r\n                  setShowError(true);\r\n                } else { \r\n                  setShowError(false);\r\n                  setPassword(e.target.value);\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => {\r\n                if (password && e.target.value !== password) {\r\n                  setShowError(true);\r\n                } else { \r\n                  setConfirmPassword(e.target.value);\r\n                  setShowError(false);\r\n                }\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={showError || !confirmPassword || !password}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            {showError && (\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Typography\r\n                    className={classes.messageFailure}\r\n                    variant=\"subtitle1\"\r\n                  >\r\n                    { messageContent || 'Passwords do no match'}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {success && (\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Typography\r\n                    className={classes.messageSuccess}\r\n                    variant=\"subtitle1\"\r\n                  >\r\n                    { messageContent }\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/confirmEmail\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\ComfirmEmailForgotPassword.js",["171"],"import React, { useState } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst sendEmailToServer = async (credentials) => {\r\n  try {\r\n    console.log(\"signin user called\");\r\n    const url = `${process.env.REACT_APP_BACK_END_URL}/confirmEmailResetPassword`;\r\n    //\"https://google-drive-clone-rk.herokuapp.com/confirmEmailResetPassword\";\r\n    //const url = 'http://localhost:8585/login';\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    const status = response.status;\r\n    // console.log(\"res, status\", response, status);\r\n    const data = await response.json();\r\n    // console.log(\"data\", data);\r\n    return data;\r\n  } catch (err) {\r\n    console.log(\"login error\", err);\r\n  }\r\n};\r\n\r\nconst ConfirmEmailForgotPassword = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState();\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [messageContent, setMessageContent] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = await sendEmailToServer({\r\n      username: email,\r\n    });\r\n    // console.log(\"token\", data);\r\n    handleResponse(data);\r\n  };\r\n\r\n  const handleResponse = (data) => {\r\n    // console.log('data', data);\r\n    setShowMessage(true);\r\n    if (data.message === \"Sent Successfully\") {\r\n      setSuccess(true);\r\n      setMessageContent(\r\n        \"Email Sent Successfully, please click on the reset link\"\r\n      );\r\n    } else if (data.message === \"User doesn't  exists\") {\r\n      setSuccess(false);\r\n      setMessageContent(\"User check the email or Signup with as a new user\");\r\n    } else if (data.message === \"Enter valid email ID\") {\r\n      setSuccess(false);\r\n      setMessageContent(\"User check the email or Signup with as a new user\");\r\n    } else {\r\n      setSuccess(false);\r\n      setMessageContent(\"An error ocurred, please try again later!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\r\n            Confirm Email\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n            noValidate={false}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"username\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Send\r\n            </Button>\r\n            {showMessage && (\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Typography className={success? classes.messageSuccess: classes.messageFailure} variant=\"body2\">{messageContent}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmEmailForgotPassword;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\upload\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signup\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\confirmEmailForgotPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\signin\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\auth\\resetPassword\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\MenuAppBar.js",["172","173"],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\menuappbar\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\appStyles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\File.js",["174"],"import React, { useState } from \"react\";\r\nimport JsFileDownloader from \"js-file-downloader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Button, Dialog, DialogActions, DialogTitle } from \"@material-ui/core\";\r\nimport { useModal } from \"react-modal-hook\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nimport {\r\n  MdLink,\r\n  MdFileDownload,\r\n  MdDeleteForever,\r\n  MdContentCopy,\r\n} from \"react-icons/md\";\r\nimport axios from \"axios\";\r\n\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst File = (file) => {\r\n  const token = JSON.parse(localStorage.getItem(\"token\"));\r\n  const classes = useStyles();\r\n  const [fileRef, setFileRef] = useState(file);\r\n  const [link, setLink] = useState();\r\n\r\n  const fetchPresignedLink = async (fileRef) => {\r\n    var data = JSON.stringify({\r\n      filename: fileRef.fileName,\r\n      filetype: fileRef.fileType,\r\n    });\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_BACK_END_URL}/geturl`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        // console.log('signed url ',response.data.url);\r\n        setLink(response.data.url);\r\n        showModal();\r\n        // setIsOpen(true);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const downloadPresignedFile = async (fileRef) => {\r\n    var data = JSON.stringify({\r\n      filename: fileRef.fileName,\r\n      filetype: fileRef.fileType,\r\n    });\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_BACK_END_URL}/geturl`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        // console.log(JSON.stringify(response.data));\r\n        // console.log(response.data.url);\r\n        new JsFileDownloader({\r\n          url: response.data.url,\r\n        })\r\n          .then(function () {\r\n            console.log(\"file download over\");\r\n          })\r\n          .catch(function (error) {\r\n            console.log(\"error occurred\");\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function getLink() {\r\n    console.log(\"getLink\", fileRef);\r\n    fetchPresignedLink(fileRef);\r\n  }\r\n\r\n  function downloadFile() {\r\n    console.log(\"download\", fileRef);\r\n    downloadPresignedFile(fileRef);\r\n  }\r\n\r\n  function removeFile() {\r\n    console.log(\"removeFile\", fileRef);\r\n    showModal();\r\n  }\r\n\r\n  const copyCodeToClipboard = () => {\r\n    // console.log('copyCodeToClipboard', link);\r\n    // const el = document.createElement(\"textarea\");\r\n    // el.value = link;\r\n    // document.body.appendChild(el);\r\n    // el.select();\r\n    // document.execCommand(\"copy\");\r\n    // document.body.removeChild(el);\r\n    copy(link);\r\n  };\r\n\r\n  const [showModal, hideModal] = useModal(({ in: open, onExited }) => (\r\n    <Dialog open={open} onExited={onExited} onClose={hideModal}>\r\n      <div style={{ width: \"200px\" }}>\r\n        <DialogTitle>\r\n          <div>\r\n            <a\r\n              className={classes.anchor}\r\n              href={link}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              File link\r\n            </a>\r\n            { link && <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => copyCodeToClipboard(link)}\r\n            >\r\n              <MdContentCopy />\r\n            </Button>}\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            onClick={hideModal}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </div>\r\n    </Dialog>\r\n  ), [link]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <ContextMenu id={fileRef.fileName} className={classes.contextMenu}>\r\n        <MenuItem\r\n          className={classes.contextMenuItem}\r\n          onClick={() => getLink(file)}\r\n        >\r\n          <MdLink /> &nbsp; Get Link\r\n        </MenuItem>\r\n        <MenuItem\r\n          className={classes.contextMenuItem}\r\n          onClick={() => downloadFile(file)}\r\n        >\r\n          <MdFileDownload />\r\n          &nbsp; Download\r\n        </MenuItem>\r\n        <MenuItem divider />\r\n        <MenuItem\r\n          className={classes.contextMenuItem}\r\n          onClick={() => removeFile(file)}\r\n        >\r\n          <MdDeleteForever /> &nbsp;Remove\r\n        </MenuItem>\r\n      </ContextMenu>\r\n\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={file.displayImage}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n      </CardActionArea>\r\n      <ContextMenuTrigger id={fileRef.fileName}>\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              overflow: \"hidden\",\r\n              padding: \"10px 0\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Typography gutterBottom variant=\"subtitle2\">\r\n              {fileRef.originalName}\r\n            </Typography>\r\n          </div>\r\n        </CardActions>\r\n      </ContextMenuTrigger>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default File;\r\n","E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\file\\styles.js",[],"E:\\Guvi Bootcamp\\Main Bootcamp\\Hackathon\\google-drive-clone-v2\\google-drive-clone-front-end\\src\\components\\home\\Home.js",["175","176","177","178","179"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"./styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport File from \"../file/File.js\";\r\n\r\nconst Home = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const token = JSON.parse(localStorage.getItem(\"token\"));\r\n  const username = JSON.parse(localStorage.getItem(\"username\"));\r\n  if (!token) {\r\n    localStorage.removeItem('token');\r\n    window.location.assign(\"/home\");\r\n  }\r\n  const authenticateUser = async () => {\r\n    console.log(\"authenticateUser---------------------\");\r\n    try {\r\n      await axios.post(\r\n        `${process.env.REACT_APP_BACK_END_URL}/authenticateSession`,\r\n        {\r\n          token,\r\n          username,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      localStorage.removeItem('token');\r\n      window.location.assign(\"/home\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\");\r\n    authenticateUser();\r\n  }, []);\r\n  \r\n  const prepareFilesForUI = (files) => { \r\n    const updatedFilesArray = files.map(file => { \r\n      if (file.fileType.indexOf(\"image\") !== -1) {\r\n        file.displayImage = './images/im1.png';\r\n      } else if (file.fileType.indexOf(\"video\") !== -1) {\r\n        file.displayImage = './images/mv1.png';\r\n      } else { \r\n        file.displayImage = './images/doc.png';\r\n      }\r\n      file.originalName = file.fileName.slice(6, file.fileName.length);\r\n      // console.log('file.slice(file.fileName.indexOf(\"_\") + 1, file.fileName.length - 1)', file.slice(file.fileName.indexOf(\"_\") + 1, file.fileName.length - 1));\r\n      // file.fileName = file.slice(file.fileName.indexOf(\"_\") + 1, file.fileName.length - 1);\r\n\r\n      return file;\r\n    })\r\n    setFiles(updatedFilesArray);\r\n  }\r\n\r\n  const fetchFilesInfo = async () => {\r\n    try {\r\n      const result = await axios.get(\r\n        `${process.env.REACT_APP_BACK_END_URL}/allfiles`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(result);\r\n      prepareFilesForUI(result.data.files);\r\n    } catch (err) {\r\n      console.log(err);\r\n      localStorage.removeItem('token');\r\n      window.location.assign(\"/home\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFilesInfo();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <h1>Home</h1>\r\n      <Grid container className={classes.root}>\r\n        {files.map((file) => {\r\n          return (\r\n            <Grid key={file.fileName} item>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  justifyContent: \"space-around\",\r\n                  marginRight: \"20px\"\r\n                }}\r\n              >\r\n                <File {...file} />\r\n              </div>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"180","replacedBy":"184"},{"ruleId":"182","replacedBy":"185"},{"ruleId":"180","replacedBy":"186"},{"ruleId":"182","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"192","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":13},{"ruleId":"188","severity":1,"message":"193","line":15,"column":15,"nodeType":"190","messageId":"191","endLine":15,"endColumn":20},{"ruleId":"180","replacedBy":"194"},{"ruleId":"182","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":54,"column":26,"nodeType":"190","endLine":54,"endColumn":33},{"ruleId":"188","severity":1,"message":"198","line":26,"column":11,"nodeType":"190","messageId":"191","endLine":26,"endColumn":17},{"ruleId":"188","severity":1,"message":"199","line":40,"column":10,"nodeType":"190","messageId":"191","endLine":40,"endColumn":21},{"ruleId":"188","severity":1,"message":"200","line":40,"column":23,"nodeType":"190","messageId":"191","endLine":40,"endColumn":37},{"ruleId":"188","severity":1,"message":"198","line":26,"column":11,"nodeType":"190","messageId":"191","endLine":26,"endColumn":17},{"ruleId":"188","severity":1,"message":"201","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":12},{"ruleId":"188","severity":1,"message":"202","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":18},{"ruleId":"188","severity":1,"message":"203","line":27,"column":19,"nodeType":"190","messageId":"191","endLine":27,"endColumn":29},{"ruleId":"188","severity":1,"message":"204","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":21},{"ruleId":"188","severity":1,"message":"205","line":5,"column":23,"nodeType":"190","messageId":"191","endLine":5,"endColumn":31},{"ruleId":"188","severity":1,"message":"206","line":5,"column":33,"nodeType":"190","messageId":"191","endLine":5,"endColumn":51},{"ruleId":"196","severity":1,"message":"207","line":42,"column":6,"nodeType":"208","endLine":42,"endColumn":8,"suggestions":"209"},{"ruleId":"196","severity":1,"message":"210","line":84,"column":6,"nodeType":"208","endLine":84,"endColumn":8,"suggestions":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],["212"],["213"],["212"],["213"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'red' is defined but never used.","'green' is defined but never used.",["212"],["213"],"react-hooks/exhaustive-deps","The ref value 'timer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timer.current' to a variable inside the effect, and use that variable in the cleanup function.","'status' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'setShowMessage' is assigned a value but never used.","'clsx' is defined but never used.","'useTheme' is defined but never used.","'setFileRef' is assigned a value but never used.","'ContextMenu' is defined but never used.","'MenuItem' is defined but never used.","'ContextMenuTrigger' is defined but never used.","React Hook useEffect has a missing dependency: 'authenticateUser'. Either include it or remove the dependency array.","ArrayExpression",["214"],"React Hook useEffect has a missing dependency: 'fetchFilesInfo'. Either include it or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [authenticateUser]",{"range":"220","text":"221"},"Update the dependencies array to be: [fetchFilesInfo]",{"range":"222","text":"223"},[1226,1228],"[authenticateUser]",[2597,2599],"[fetchFilesInfo]"]